# This workflow is temporarily disabled during alpha development phase.
# The file has been renamed to .disabled to prevent GitHub Actions from executing it.
# Purpose: Stop daily failure notifications while preserving the workflow configuration.
# To re-enable: Remove the .disabled suffix and update the workflow as needed.

name: Daily LeetCode Solve

on:
  schedule:
    # Run at 00:05 UTC daily (adjust timing as needed)
    - cron: '5 0 * * *'
  workflow_dispatch:  # Allow manual triggering

env:
  LEETCODE_API: 'https://leetcode-api-pied.vercel.app'
  OPTICODEGEN_API: ${{ secrets.OPTICODEGEN_API_URL }}
  MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
  MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
  MAILGUN_SMTP_SERVER: ${{ secrets.MAILGUN_SMTP_SERVER }}
  MAILGUN_SMTP_PORT: ${{ secrets.MAILGUN_SMTP_PORT }}
  MAILGUN_SMTP_USERNAME: ${{ secrets.MAILGUN_SMTP_USERNAME }}
  MAILGUN_SMTP_PASSWORD: ${{ secrets.MAILGUN_SMTP_PASSWORD }}
  EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}

jobs:
  solve-daily:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Fetch daily challenge
        id: fetch-daily
        run: |
          DAILY_PROBLEM=$(curl -s "${{ env.LEETCODE_API }}/daily")
          echo "problem_data=$DAILY_PROBLEM" >> $GITHUB_OUTPUT
          echo "Fetched daily problem data: $DAILY_PROBLEM"

      - name: Generate solution
        id: generate-solution
        if: steps.fetch-daily.outputs.problem_data != ''
        run: |
          python scripts/daily_solver.py \
            --problem-data '${{ steps.fetch-daily.outputs.problem_data }}' \
            --api-url ${{ env.OPTICODEGEN_API }}

      - name: Update statistics
        run: python scripts/update_stats.py

      - name: Commit and push if there are changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add solves/ stats.json
          git diff --quiet && git diff --staged --quiet || (git commit -m "solve: add solution for $(date +'%Y-%m-%d') challenge" && git push)

      - name: Send notification
        if: always()
        run: python scripts/send_notification.py \
          --status ${{ job.status }} \
          --problem '${{ steps.fetch-daily.outputs.problem_data }}' \
          --solution-path 'solves/'
